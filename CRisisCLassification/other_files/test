#--------------------------------------------------------------------------
# Call function to create the TOPIC 104 (json format) for response_forecast

msgIdent = "5433dfde68"
i = datetime.now()
sent_dateTime = i.strftime('%Y/%m/%d %H:%M:%S')
status = "Actual"
actionType = "Update"
scope = "Public"
district = response_forecast['name']
code = 20190617001

dataStreamGener = "CRCL"
dataStreamID = response_forecast["Datastreams"][0]["@iot.id"]
dataStreamName = response_forecast["Datastreams"][0]["name"]
dataStreamDescript = response_forecast["Datastreams"][0]["properties"]["type"] + " and " +
                     response_forecast["Datastreams"][0]["properties"]["lastRunId"]
lang = "it-IT"
dataStreamCategory = "Met"
dataStreamSubCategory = "Flood"

#position = [45.552475, 11.549126]

dataSeriesID = '1'
dataSeriesName = response_forecast['name']

# Call the class Top104_Metric_Report to create an object data of this class
#
data = Top104_Metric_Report(msgIdent, sent_dateTime, status, actionType, scope, district, code,
                            dataStreamGener, dataStreamID, dataStreamName, dataStreamDescript,
                            lang, dataStreamCategory, dataStreamSubCategory,
                            dataSeriesID, dataSeriesName)

# create the header of the object
data.create_dictHeader()

# create the measurements of the object
#
for item in response_forecast['Datastreams'][0]['Observations']:
    data.topic_yValue += [item['result']]
    data.topic_measurementID += [item['@iot.id']]
    data.topic_measurementTimeStamp += [item['phenomenonTime']]

    if 'xValue' in item:
        data.topic_xValue += [item['xValue']]
    else:
        data.topic_xValue += [item['phenomenonTime']]

# call class function
data.create_dictMeasurements()

# create the body of the object
data.create_dictBody()

# create the TOP104_METRIC_REPORT as json
top104_forecast = {'header': data.header, 'body': data.body}

# write json (top104_forecast) to output file
with open('TOP104_forecast_outjson.txt', 'w') as outfile:
    json.dump(top104_forecast, outfile, indent=4)


